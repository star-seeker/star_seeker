<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.imooc.mapper.ItemsMapperExt" >

    <select id="queryItemComments" parameterType="Map" resultType="com.imooc.pojo.vo.ItemCommentVO">
        SELECT
            ic.comment_level AS commentLevel,
            ic.content AS content,
            ic.sepc_name AS sepcName,
            ic.created_time AS createTime,
            u.face AS userFace,
            u.nickname AS nickName
        FROM
            items_comments ic
        LEFT JOIN
            users u
        ON
            ic.user_id = u.id
        WHERE
            ic.item_id = #{paramsMap.itemId}
          <if test="paramsMap.level != null and paramsMap.level != ''">
              AND ic.comment_level = #{paramsMap.level}
          </if>
    </select>

    <select id="searchItems" parameterType="Map" resultType="com.imooc.pojo.vo.SearchItemsVO">
        SELECT
            i.id AS itemId,
            i.item_name AS itemName,
            i.sell_counts AS sellCounts,
            ii.url AS imgUrl,
            tempSpec.price_discount AS price
        FROM
            items i
        LEFT JOIN
            items_img ii
        ON
            i.id = ii.item_id
        LEFT JOIN
        (
            SELECT
                item_id, MIN(price_discount) AS price_discount
            FROM
                items_spec
            GROUP BY
                item_id
        ) tempSpec
        ON
            i.id = tempSpec.item_id
        WHERE
            ii.is_main = 1
            <if test="paramsMap.keywords != null and paramsMap.keywords != ''">
                AND i.item_name like '%${paramsMap.keywords}%'
            </if>
        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.imooc.pojo.vo.SearchItemsVO">
        SELECT
            i.id AS itemId,
            i.item_name AS itemName,
            i.sell_counts AS sellCounts,
            ii.url AS imgUrl,
            tempSpec.price_discount AS price
        FROM
            items i
        LEFT JOIN
            items_img ii
        ON
            i.id = ii.item_id
        LEFT JOIN
        (
            SELECT
                item_id, MIN(price_discount) AS price_discount
            FROM
                items_spec
            GROUP BY
                item_id
        ) tempSpec
        ON
            i.id = tempSpec.item_id
        WHERE
            ii.is_main = 1
        and
            i.cat_id = #{paramsMap.catId}
        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot;">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot;">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>

    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.imooc.pojo.vo.ShopcartVO">
        select
            i.id as itemId,
            i.item_name as itemName,
            ii.url as itemImgUrl,
            t_is.id as specId,
            t_is.name as specName,
            t_is.price_discount as priceDiscount,
            t_is.price_normal as priceNormal
        from
            items_spec t_is
        left join
            items i
        on
            t_is.item_id = i.id
        left join
            items_img ii
        on
            i.id = ii.item_id
        where
            ii.is_main = 1
        and
            t_is.id in
            <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
                #{specId}
            </foreach>
    </select>

    <update id="decreaseItemSpecStock">
        update
            items_spec
        set
            stock = stock - #{pendingCounts}
        where
            id = #{specId}
          and
            stock >= #{pendingCounts}
    </update>
</mapper>